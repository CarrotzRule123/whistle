[
    FunDecl {
        export: false,
        ident: "testFunction1",
        params: [
            IdentTyped {
                ident: "testParam1",
                type_ident: Primitive(
                    I32,
                ),
            },
            IdentTyped {
                ident: "testParam2",
                type_ident: Ident(
                    "testType",
                ),
            },
        ],
        ret_type: Primitive(
            None,
        ),
        stmt: [
            VarDecl {
                ident_typed: IdentTyped {
                    ident: "testVar",
                    type_ident: Primitive(
                        Any,
                    ),
                },
                val: Unary(
                    Primary(
                        Literal(
                            Str(
                                "HelloWorld",
                            ),
                        ),
                    ),
                ),
            },
            ValDecl {
                ident_typed: IdentTyped {
                    ident: "testVal",
                    type_ident: Primitive(
                        Any,
                    ),
                },
                val: Unary(
                    Primary(
                        Literal(
                            Int(
                                12345,
                            ),
                        ),
                    ),
                ),
            },
            If {
                cond: Unary(
                    Primary(
                        Literal(
                            Bool(
                                true,
                            ),
                        ),
                    ),
                ),
                then_stmt: [
                    Expr(
                        Unary(
                            Primary(
                                IdentVal {
                                    ident: "testFunction2",
                                    prim: [
                                        Arguments(
                                            [],
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ),
                    Expr(
                        Unary(
                            Primary(
                                IdentVal {
                                    ident: "testFunction2",
                                    prim: [
                                        Arguments(
                                            [],
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ),
                ],
                else_stmt: None,
            },
            While {
                cond: Unary(
                    Primary(
                        Literal(
                            Bool(
                                true,
                            ),
                        ),
                    ),
                ),
                do_stmt: [
                    Expr(
                        Unary(
                            Primary(
                                IdentVal {
                                    ident: "testFunction2",
                                    prim: [
                                        Arguments(
                                            [],
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ),
                    Break,
                ],
            },
        ],
    },
    FunDecl {
        export: false,
        ident: "testFunction2",
        params: [
            IdentTyped {
                ident: "testParam1",
                type_ident: IdentType {
                    ident: "Map",
                    prim: [
                        Ident(
                            "Arg1",
                        ),
                        Ident(
                            "Arg2",
                        ),
                    ],
                },
            },
        ],
        ret_type: Ident(
            "void",
        ),
        stmt: [
            Return(
                None,
            ),
        ],
    },
    StructDecl {
        export: false,
        ident: "testType",
        params: [
            IdentTyped {
                ident: "property1",
                type_ident: Ident(
                    "string",
                ),
            },
            IdentTyped {
                ident: "property2",
                type_ident: Ident(
                    "int",
                ),
            },
        ],
    },
    VarDecl {
        ident_typed: IdentTyped {
            ident: "testGlobal",
            type_ident: Primitive(
                Any,
            ),
        },
        val: Unary(
            Primary(
                Literal(
                    Str(
                        "HelloWorld",
                    ),
                ),
            ),
        ),
    },
]